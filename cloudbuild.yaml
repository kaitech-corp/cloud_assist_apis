# Define the Cloud Build pipeline steps
steps:
  # Step 1: Run a bash script that checks which JSON files in the api directory have been modified, validate them, and save them to the specified storage bucket
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      # Define the bash script that runs the pipeline logic
      - '-c'
      - |
        # Export the bucket name and project ID as environment variables
        export BUCKET_NAME= "_BUCKET_NAME"
        
        # Find the previous commit hash using git log
        export PREV_COMMIT=$(git log -n 1 --pretty=format:%H HEAD~1)
        # Check which JSON files in the api directory have been modified
        export FILES_CHANGED=$(git diff --name-only $_PREV_COMMIT HEAD | grep "^api\/.*\.json$" | sed 's/^api\///')

        if [ -z "$_FILES_CHANGED" ]; then
          echo 'No JSON files have been modified.'
          exit 0
        fi
        
        # Validate each modified JSON file and save it to the specified storage bucket
        for file in $_FILES_CHANGED; do
          if ! python -mjson.tool $file >/dev/null 2>&1; then
            echo "Error: $file is not a valid JSON file."
            exit 1
          fi
          gsutil cp $file gs://$_BUCKET_NAME/$file
        done
  
    # Define default substitutions to be used in other fields
substitutions:
  _BUCKET_NAME: "api-project-371618.appspot.com"
  _FILES_CHANGED: "api/*.json"
  _PREV_COMMIT: <commit-hash>